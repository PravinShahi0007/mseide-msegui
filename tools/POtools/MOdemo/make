#! /bin/sh

how ()
{
    cat <<- HELP
	Aufruf: $0 [-h|-c|-t|-s|-n|-r]
	mit:
	    -h  Diesen Hilfetext ausgeben
	    -c  Erzeugte Zwischendateien bereinigen (clean)
	    -t  dto.
	    -s  Programmdatei von Symbolen bereinigen ("strippen")
	    -n  Erzeugte Zwischendateien bereinigen, dann kompilieren
	    -r  Kompilieren und erzeugte Zwischendateien bereinigen
	        ohne Parameter nur kompilieren
	    -x  Erzeugtes Programm gleich ausfÃ¼hren (nicht mit -r)

HELP
}

make ()
{
    local mainfile targetfile result makeopts

    targetfile=$(pwd -P); targetfile=${targetfile##*/}.prj
    [ -e $targetfile ] || targetfile=$(echo *.prj)
    targetfile=${targetfile%%.prj*}
    PROJECTNAME=$targetfile
    targetfile=$targetfile.prj
    eval $(grep -- "mainfile=" $targetfile)
    eval $(grep -- "targetfile=" $targetfile)
    [ -e makeopts ] && makeopts=$(< makeopts)
    $DEBUG \
    ppcx64 -o$targetfile $makeopts\
     -Fu/usr/lib64/msegui/lib/common/* -Fu/usr/lib64/msegui/lib/common/kernel\
     -Fi/usr/lib64/msegui/lib/common/kernel -Fu/usr/lib64/msegui/lib/common/kernel/linux\
     -l -Mobjfpc -Sh -gl\
     $mainfile
    result=$?
    echo ""
    [ "$result" = 0 ] && [ "$1" = -x ] && $DEBUG $targetfile
}

clean ()
{
    [ "$DEBUG" ] && null="stderr" || null=null	# { echo clean; return; }

    $DEBUG rm -vf *.bak? > /dev/$null
    $DEBUG rm -vf *.bak > /dev/$null

    if [ -e makeopts ]; then
	set -- $(< makeopts)
	while [ "$1" ]; do
	    if [ "${1:0:3}" = "-FE" ] || [ "${1:0:3}" = "-FU" ]; then
		cd "${1:3}"; break
	    fi
	    shift
	done
    fi
    $DEBUG rm -vf *.o > /dev/$null
    $DEBUG rm -vf *.ppu > /dev/$null
    cd "$OLDPWD"
}

tidy ()
{
    clean	# vorerst...
}

stripp ()
{
    local targetfile

    targetfile=$(pwd -P); targetfile=${targetfile##*/}.prj
    [ -e $targetfile ] || targetfile=$(echo *.prj)
    targetfile=${targetfile%%.prj*}
    PROJECTNAME=$targetfile
    targetfile=$targetfile.prj
    eval $(grep -- "targetfile=" $targetfile)
    $DEBUG strip $targetfile
}

case $1 in
    -h*) how; exit;;
    -c*) clean; exit;;
    -t*) tidy; exit;;
    -s*) stripp; exit;;
    -n*) clean;;
    -r*) make && clean; exit;;
    *)   ;;
esac
make $1
